

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 12 09:05:06 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.10
    14                           ; Generated 31/07/2019 GMT
    15                           ; 
    16                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0014                     	;# 
   225  0015                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0017                     	;# 
   229  0018                     	;# 
   230  0019                     	;# 
   231  001A                     	;# 
   232  001B                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001D                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  0081                     	;# 
   239  0085                     	;# 
   240  0086                     	;# 
   241  0087                     	;# 
   242  0088                     	;# 
   243  0089                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  008F                     	;# 
   248  0090                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0094                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0097                     	;# 
   258  0098                     	;# 
   259  0099                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  009F                     	;# 
   266  0105                     	;# 
   267  0107                     	;# 
   268  0108                     	;# 
   269  0109                     	;# 
   270  010C                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  010E                     	;# 
   274  010F                     	;# 
   275  0185                     	;# 
   276  0187                     	;# 
   277  0188                     	;# 
   278  0189                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281  001E                     _ADRESH	set	30
   282  0006                     _PORTB	set	6
   283  0005                     _PORTA	set	5
   284  001F                     _ADCON0bits	set	31
   285  000C                     _PIR1bits	set	12
   286  000B                     _INTCONbits	set	11
   287  0086                     _TRISB	set	134
   288  0085                     _TRISA	set	133
   289  009F                     _ADCON1	set	159
   290  008C                     _PIE1bits	set	140
   291  0188                     _ANSEL	set	392
   292                           
   293                           ; #config settings
   294  0000                     
   295                           	psect	cinit
   296  000F                     start_initialization:	
   297  000F                     __initialization:	
   298                           
   299                           ; Clear objects allocated to COMMON
   300  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   301  0010                     end_of_initialization:	
   302                           ;End of C runtime variable initialization code
   303                           
   304  0010                     __end_of__initialization:	
   305  0010  0183               	clrf	3
   306  0011  120A  118A  28B2   	ljmp	_main	;jump to C main() function
   307                           
   308                           	psect	bssCOMMON
   309  0075                     __pbssCOMMON:	
   310  0075                     _ready:	
   311  0075                     	ds	1
   312                           
   313                           	psect	cstackCOMMON
   314  0070                     __pcstackCOMMON:	
   315  0070                     ?_initADC:	
   316  0070                     ?_ISR:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ??_ISR:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_main:	
   323                           ; 1 bytes @ 0x0
   324                           
   325                           
   326                           ; 1 bytes @ 0x0
   327  0070                     	ds	2
   328  0072                     ??_initADC:	
   329                           
   330                           ; 1 bytes @ 0x2
   331  0072                     	ds	2
   332  0074                     initADC@analog:	
   333                           
   334                           ; 1 bytes @ 0x4
   335  0074                     	ds	1
   336  0075                     ??_main:	
   337                           
   338                           	psect	maintext
   339  00B2                     __pmaintext:	
   340                           ; 1 bytes @ 0x5
   341 ;;
   342 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   343 ;;
   344 ;; *************** function _main *****************
   345 ;; Defined at:
   346 ;;		line 45 in file "SPI.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : B00/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   360 ;;      Params:         0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0
   363 ;;      Totals:         0       0       0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels required when called:    2
   366 ;; This function calls:
   367 ;;		_initADC
   368 ;; This function is called by:
   369 ;;		Startup code after reset
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           
   374                           ;psect for function _main
   375  00B2                     _main:	
   376  00B2                     l679:	
   377                           ;incstack = 0
   378                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   379                           
   380                           
   381                           ;SPI.c: 47:     TRISA = 0B00000011;
   382  00B2  3003               	movlw	3
   383  00B3  1683               	bsf	3,5	;RP0=1, select bank1
   384  00B4  1303               	bcf	3,6	;RP1=0, select bank1
   385  00B5  0085               	movwf	5	;volatile
   386  00B6                     l681:	
   387                           
   388                           ;SPI.c: 48:     TRISB = 0;
   389  00B6  0186               	clrf	6	;volatile
   390  00B7                     l683:	
   391                           
   392                           ;SPI.c: 50:     ANSEL = 0b00000011;
   393  00B7  3003               	movlw	3
   394  00B8  1683               	bsf	3,5	;RP0=1, select bank3
   395  00B9  1703               	bsf	3,6	;RP1=1, select bank3
   396  00BA  0088               	movwf	8	;volatile
   397                           
   398                           ;SPI.c: 52:     PORTA = 0;
   399  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   400  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   401  00BD  0185               	clrf	5	;volatile
   402                           
   403                           ;SPI.c: 53:     PORTB = 0;
   404  00BE  0186               	clrf	6	;volatile
   405  00BF                     l685:	
   406                           
   407                           ;SPI.c: 56:         initADC(0);
   408  00BF  3000               	movlw	0
   409  00C0  120A  118A  2014  120A  118A  	fcall	_initADC
   410  00C5                     l687:	
   411                           
   412                           ;SPI.c: 57:         if(ready){
   413  00C5  0875               	movf	_ready,w
   414  00C6  1903               	btfsc	3,2
   415  00C7  28C9               	goto	u21
   416  00C8  28CA               	goto	u20
   417  00C9                     u21:	
   418  00C9  28CE               	goto	l693
   419  00CA                     u20:	
   420  00CA                     l689:	
   421                           
   422                           ;SPI.c: 59:             ready = 0;
   423  00CA  01F5               	clrf	_ready
   424  00CB                     l691:	
   425                           
   426                           ;SPI.c: 60:             ADCON0bits.GO_DONE = 1;
   427  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   428  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   429  00CD  149F               	bsf	31,1	;volatile
   430  00CE                     l693:	
   431                           
   432                           ;SPI.c: 62:         initADC(1);
   433  00CE  3001               	movlw	1
   434  00CF  120A  118A  2014  120A  118A  	fcall	_initADC
   435  00D4                     l695:	
   436                           
   437                           ;SPI.c: 63:         if(ready){
   438  00D4  0875               	movf	_ready,w
   439  00D5  1903               	btfsc	3,2
   440  00D6  28D8               	goto	u31
   441  00D7  28D9               	goto	u30
   442  00D8                     u31:	
   443  00D8  28BF               	goto	l685
   444  00D9                     u30:	
   445  00D9                     l697:	
   446                           
   447                           ;SPI.c: 64:             PORTB = ADRESH;
   448  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   449  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   450  00DB  081E               	movf	30,w	;volatile
   451  00DC  0086               	movwf	6	;volatile
   452  00DD                     l699:	
   453                           
   454                           ;SPI.c: 65:             ready = 0;
   455  00DD  01F5               	clrf	_ready
   456  00DE                     l701:	
   457                           
   458                           ;SPI.c: 66:             ADCON0bits.GO_DONE = 1;
   459  00DE  149F               	bsf	31,1	;volatile
   460  00DF  28BF               	goto	l685
   461  00E0  120A  118A  280C   	ljmp	start
   462  00E3                     __end_of_main:	
   463                           
   464                           	psect	text1
   465  0014                     __ptext1:	
   466 ;; *************** function _initADC *****************
   467 ;; Defined at:
   468 ;;		line 5 in file "ADC_Init.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;  analog          1    wreg     unsigned char 
   471 ;; Auto vars:     Size  Location     Type
   472 ;;  analog          1    4[COMMON] unsigned char 
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   482 ;;      Params:         0       0       0       0       0
   483 ;;      Locals:         1       0       0       0       0
   484 ;;      Temps:          2       0       0       0       0
   485 ;;      Totals:         3       0       0       0       0
   486 ;;Total ram usage:        3 bytes
   487 ;; Hardware stack levels used:    1
   488 ;; Hardware stack levels required when called:    1
   489 ;; This function calls:
   490 ;;		Nothing
   491 ;; This function is called by:
   492 ;;		_main
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           
   497                           ;psect for function _initADC
   498  0014                     _initADC:	
   499                           
   500                           ;incstack = 0
   501                           ; Regs used in _initADC: [wreg-fsr0h+status,2+status,0]
   502                           ;initADC@analog stored from wreg
   503  0014  00F4               	movwf	initADC@analog
   504  0015                     l661:	
   505                           
   506                           ;ADC_Init.c: 6:     INTCONbits.GIE = 1;
   507  0015  178B               	bsf	11,7	;volatile
   508                           
   509                           ;ADC_Init.c: 7:     INTCONbits.PEIE = 1;
   510  0016  170B               	bsf	11,6	;volatile
   511                           
   512                           ;ADC_Init.c: 9:     PIE1bits.ADIE = 1;
   513  0017  1683               	bsf	3,5	;RP0=1, select bank1
   514  0018  1303               	bcf	3,6	;RP1=0, select bank1
   515  0019  170C               	bsf	12,6	;volatile
   516                           
   517                           ;ADC_Init.c: 11:     PIR1bits.ADIF = 0;
   518  001A  1283               	bcf	3,5	;RP0=0, select bank0
   519  001B  1303               	bcf	3,6	;RP1=0, select bank0
   520  001C  130C               	bcf	12,6	;volatile
   521                           
   522                           ;ADC_Init.c: 13:     ADCON0bits.ADCS1 = 0;
   523  001D  139F               	bcf	31,7	;volatile
   524                           
   525                           ;ADC_Init.c: 14:     ADCON0bits.ADCS0 = 1;
   526  001E  171F               	bsf	31,6	;volatile
   527                           
   528                           ;ADC_Init.c: 15:     ADCON0bits.ADON = 1;
   529  001F  141F               	bsf	31,0	;volatile
   530                           
   531                           ;ADC_Init.c: 17:     switch(analog){
   532  0020  2871               	goto	l665
   533  0021                     l14:	
   534                           ;ADC_Init.c: 18:         case 0:
   535                           
   536                           
   537                           ;ADC_Init.c: 19:             ADCON0bits.CHS3 = 0;
   538  0021  129F               	bcf	31,5	;volatile
   539                           
   540                           ;ADC_Init.c: 20:             ADCON0bits.CHS2 = 0;
   541  0022  121F               	bcf	31,4	;volatile
   542                           
   543                           ;ADC_Init.c: 21:             ADCON0bits.CHS1 = 0;
   544  0023  119F               	bcf	31,3	;volatile
   545                           
   546                           ;ADC_Init.c: 22:             ADCON0bits.CHS0 = 0;
   547  0024  111F               	bcf	31,2	;volatile
   548                           
   549                           ;ADC_Init.c: 23:             break;
   550  0025  28AB               	goto	l667
   551  0026                     l16:	
   552                           ;ADC_Init.c: 25:         case 1:
   553                           
   554                           
   555                           ;ADC_Init.c: 26:             ADCON0bits.CHS3 = 0;
   556  0026  129F               	bcf	31,5	;volatile
   557                           
   558                           ;ADC_Init.c: 27:             ADCON0bits.CHS2 = 0;
   559  0027  121F               	bcf	31,4	;volatile
   560                           
   561                           ;ADC_Init.c: 28:             ADCON0bits.CHS1 = 0;
   562  0028  119F               	bcf	31,3	;volatile
   563                           
   564                           ;ADC_Init.c: 29:             ADCON0bits.CHS0 = 1;
   565  0029  151F               	bsf	31,2	;volatile
   566                           
   567                           ;ADC_Init.c: 30:             break;
   568  002A  28AB               	goto	l667
   569  002B                     l17:	
   570                           ;ADC_Init.c: 32:         case 2:
   571                           
   572                           
   573                           ;ADC_Init.c: 33:             ADCON0bits.CHS3 = 0;
   574  002B  129F               	bcf	31,5	;volatile
   575                           
   576                           ;ADC_Init.c: 34:             ADCON0bits.CHS2 = 0;
   577  002C  121F               	bcf	31,4	;volatile
   578                           
   579                           ;ADC_Init.c: 35:             ADCON0bits.CHS1 = 1;
   580  002D  159F               	bsf	31,3	;volatile
   581                           
   582                           ;ADC_Init.c: 36:             ADCON0bits.CHS0 = 0;
   583  002E  111F               	bcf	31,2	;volatile
   584                           
   585                           ;ADC_Init.c: 37:             break;
   586  002F  28AB               	goto	l667
   587  0030                     l18:	
   588                           ;ADC_Init.c: 39:         case 3:
   589                           
   590                           
   591                           ;ADC_Init.c: 40:             ADCON0bits.CHS3 = 0;
   592  0030  129F               	bcf	31,5	;volatile
   593                           
   594                           ;ADC_Init.c: 41:             ADCON0bits.CHS2 = 0;
   595  0031  121F               	bcf	31,4	;volatile
   596                           
   597                           ;ADC_Init.c: 42:             ADCON0bits.CHS1 = 1;
   598  0032  159F               	bsf	31,3	;volatile
   599                           
   600                           ;ADC_Init.c: 43:             ADCON0bits.CHS0 = 1;
   601  0033  151F               	bsf	31,2	;volatile
   602                           
   603                           ;ADC_Init.c: 44:             break;
   604  0034  28AB               	goto	l667
   605  0035                     l19:	
   606                           ;ADC_Init.c: 46:         case 4:
   607                           
   608                           
   609                           ;ADC_Init.c: 47:             ADCON0bits.CHS3 = 0;
   610  0035  129F               	bcf	31,5	;volatile
   611                           
   612                           ;ADC_Init.c: 48:             ADCON0bits.CHS2 = 1;
   613  0036  161F               	bsf	31,4	;volatile
   614                           
   615                           ;ADC_Init.c: 49:             ADCON0bits.CHS1 = 0;
   616  0037  119F               	bcf	31,3	;volatile
   617                           
   618                           ;ADC_Init.c: 50:             ADCON0bits.CHS0 = 0;
   619  0038  111F               	bcf	31,2	;volatile
   620                           
   621                           ;ADC_Init.c: 51:             break;
   622  0039  28AB               	goto	l667
   623  003A                     l20:	
   624                           ;ADC_Init.c: 53:         case 5:
   625                           
   626                           
   627                           ;ADC_Init.c: 54:             ADCON0bits.CHS3 = 0;
   628  003A  129F               	bcf	31,5	;volatile
   629                           
   630                           ;ADC_Init.c: 55:             ADCON0bits.CHS2 = 1;
   631  003B  161F               	bsf	31,4	;volatile
   632                           
   633                           ;ADC_Init.c: 56:             ADCON0bits.CHS1 = 0;
   634  003C  119F               	bcf	31,3	;volatile
   635                           
   636                           ;ADC_Init.c: 57:             ADCON0bits.CHS0 = 1;
   637  003D  151F               	bsf	31,2	;volatile
   638                           
   639                           ;ADC_Init.c: 58:             break;
   640  003E  28AB               	goto	l667
   641  003F                     l21:	
   642                           ;ADC_Init.c: 60:         case 6:
   643                           
   644                           
   645                           ;ADC_Init.c: 61:             ADCON0bits.CHS3 = 0;
   646  003F  129F               	bcf	31,5	;volatile
   647                           
   648                           ;ADC_Init.c: 62:             ADCON0bits.CHS2 = 1;
   649  0040  161F               	bsf	31,4	;volatile
   650                           
   651                           ;ADC_Init.c: 63:             ADCON0bits.CHS1 = 1;
   652  0041  159F               	bsf	31,3	;volatile
   653                           
   654                           ;ADC_Init.c: 64:             ADCON0bits.CHS0 = 0;
   655  0042  111F               	bcf	31,2	;volatile
   656                           
   657                           ;ADC_Init.c: 65:             break;
   658  0043  28AB               	goto	l667
   659  0044                     l22:	
   660                           ;ADC_Init.c: 67:         case 7:
   661                           
   662                           
   663                           ;ADC_Init.c: 68:             ADCON0bits.CHS3 = 0;
   664  0044  129F               	bcf	31,5	;volatile
   665                           
   666                           ;ADC_Init.c: 69:             ADCON0bits.CHS2 = 1;
   667  0045  161F               	bsf	31,4	;volatile
   668                           
   669                           ;ADC_Init.c: 70:             ADCON0bits.CHS1 = 1;
   670  0046  159F               	bsf	31,3	;volatile
   671                           
   672                           ;ADC_Init.c: 71:             ADCON0bits.CHS0 = 1;
   673  0047  151F               	bsf	31,2	;volatile
   674                           
   675                           ;ADC_Init.c: 72:             break;
   676  0048  28AB               	goto	l667
   677  0049                     l23:	
   678                           ;ADC_Init.c: 74:         case 8:
   679                           
   680                           
   681                           ;ADC_Init.c: 75:             ADCON0bits.CHS3 = 1;
   682  0049  169F               	bsf	31,5	;volatile
   683                           
   684                           ;ADC_Init.c: 76:             ADCON0bits.CHS2 = 0;
   685  004A  121F               	bcf	31,4	;volatile
   686                           
   687                           ;ADC_Init.c: 77:             ADCON0bits.CHS1 = 0;
   688  004B  119F               	bcf	31,3	;volatile
   689                           
   690                           ;ADC_Init.c: 78:             ADCON0bits.CHS0 = 0;
   691  004C  111F               	bcf	31,2	;volatile
   692                           
   693                           ;ADC_Init.c: 79:             break;
   694  004D  28AB               	goto	l667
   695  004E                     l24:	
   696                           ;ADC_Init.c: 81:         case 9:
   697                           
   698                           
   699                           ;ADC_Init.c: 82:             ADCON0bits.CHS3 = 1;
   700  004E  169F               	bsf	31,5	;volatile
   701                           
   702                           ;ADC_Init.c: 83:             ADCON0bits.CHS2 = 0;
   703  004F  121F               	bcf	31,4	;volatile
   704                           
   705                           ;ADC_Init.c: 84:             ADCON0bits.CHS1 = 0;
   706  0050  119F               	bcf	31,3	;volatile
   707                           
   708                           ;ADC_Init.c: 85:             ADCON0bits.CHS0 = 1;
   709  0051  151F               	bsf	31,2	;volatile
   710                           
   711                           ;ADC_Init.c: 86:             break;
   712  0052  28AB               	goto	l667
   713  0053                     l25:	
   714                           ;ADC_Init.c: 88:         case 10:
   715                           
   716                           
   717                           ;ADC_Init.c: 89:             ADCON0bits.CHS3 = 1;
   718  0053  169F               	bsf	31,5	;volatile
   719                           
   720                           ;ADC_Init.c: 90:             ADCON0bits.CHS2 = 0;
   721  0054  121F               	bcf	31,4	;volatile
   722                           
   723                           ;ADC_Init.c: 91:             ADCON0bits.CHS1 = 1;
   724  0055  159F               	bsf	31,3	;volatile
   725                           
   726                           ;ADC_Init.c: 92:             ADCON0bits.CHS0 = 0;
   727  0056  111F               	bcf	31,2	;volatile
   728                           
   729                           ;ADC_Init.c: 93:             break;
   730  0057  28AB               	goto	l667
   731  0058                     l26:	
   732                           ;ADC_Init.c: 95:         case 11:
   733                           
   734                           
   735                           ;ADC_Init.c: 96:             ADCON0bits.CHS3 = 1;
   736  0058  169F               	bsf	31,5	;volatile
   737                           
   738                           ;ADC_Init.c: 97:             ADCON0bits.CHS2 = 0;
   739  0059  121F               	bcf	31,4	;volatile
   740                           
   741                           ;ADC_Init.c: 98:             ADCON0bits.CHS1 = 1;
   742  005A  159F               	bsf	31,3	;volatile
   743                           
   744                           ;ADC_Init.c: 99:             ADCON0bits.CHS0 = 1;
   745  005B  151F               	bsf	31,2	;volatile
   746                           
   747                           ;ADC_Init.c: 100:             break;
   748  005C  28AB               	goto	l667
   749  005D                     l27:	
   750                           ;ADC_Init.c: 102:         case 12:
   751                           
   752                           
   753                           ;ADC_Init.c: 103:             ADCON0bits.CHS3 = 1;
   754  005D  169F               	bsf	31,5	;volatile
   755                           
   756                           ;ADC_Init.c: 104:             ADCON0bits.CHS2 = 1;
   757  005E  161F               	bsf	31,4	;volatile
   758                           
   759                           ;ADC_Init.c: 105:             ADCON0bits.CHS1 = 0;
   760  005F  119F               	bcf	31,3	;volatile
   761                           
   762                           ;ADC_Init.c: 106:             ADCON0bits.CHS0 = 0;
   763  0060  111F               	bcf	31,2	;volatile
   764                           
   765                           ;ADC_Init.c: 107:             break;
   766  0061  28AB               	goto	l667
   767  0062                     l28:	
   768                           ;ADC_Init.c: 109:         case 13:
   769                           
   770                           
   771                           ;ADC_Init.c: 110:             ADCON0bits.CHS3 = 1;
   772  0062  169F               	bsf	31,5	;volatile
   773                           
   774                           ;ADC_Init.c: 111:             ADCON0bits.CHS2 = 1;
   775  0063  161F               	bsf	31,4	;volatile
   776                           
   777                           ;ADC_Init.c: 112:             ADCON0bits.CHS1 = 0;
   778  0064  119F               	bcf	31,3	;volatile
   779                           
   780                           ;ADC_Init.c: 113:             ADCON0bits.CHS0 = 1;
   781  0065  151F               	bsf	31,2	;volatile
   782                           
   783                           ;ADC_Init.c: 114:             break;
   784  0066  28AB               	goto	l667
   785  0067                     l29:	
   786                           ;ADC_Init.c: 116:         case 14:
   787                           
   788                           
   789                           ;ADC_Init.c: 117:             ADCON0bits.CHS3 = 1;
   790  0067  169F               	bsf	31,5	;volatile
   791                           
   792                           ;ADC_Init.c: 118:             ADCON0bits.CHS2 = 1;
   793  0068  161F               	bsf	31,4	;volatile
   794                           
   795                           ;ADC_Init.c: 119:             ADCON0bits.CHS1 = 1;
   796  0069  159F               	bsf	31,3	;volatile
   797                           
   798                           ;ADC_Init.c: 120:             ADCON0bits.CHS0 = 0;
   799  006A  111F               	bcf	31,2	;volatile
   800                           
   801                           ;ADC_Init.c: 121:             break;
   802  006B  28AB               	goto	l667
   803  006C                     l30:	
   804                           ;ADC_Init.c: 123:         case 15:
   805                           
   806                           
   807                           ;ADC_Init.c: 124:             ADCON0bits.CHS3 = 1;
   808  006C  169F               	bsf	31,5	;volatile
   809                           
   810                           ;ADC_Init.c: 125:             ADCON0bits.CHS2 = 1;
   811  006D  161F               	bsf	31,4	;volatile
   812                           
   813                           ;ADC_Init.c: 126:             ADCON0bits.CHS1 = 1;
   814  006E  159F               	bsf	31,3	;volatile
   815                           
   816                           ;ADC_Init.c: 127:             ADCON0bits.CHS0 = 1;
   817  006F  151F               	bsf	31,2	;volatile
   818                           
   819                           ;ADC_Init.c: 128:             break;
   820  0070  28AB               	goto	l667
   821  0071                     l665:	
   822  0071  0874               	movf	initADC@analog,w
   823  0072  00F2               	movwf	??_initADC
   824  0073  01F3               	clrf	??_initADC+1
   825                           
   826                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   827                           ; Switch size 1, requested type "simple"
   828                           ; Number of cases is 1, Range of values is 0 to 0
   829                           ; switch strategies available:
   830                           ; Name         Instructions Cycles
   831                           ; simple_byte            4     3 (average)
   832                           ; direct_byte           11     8 (fixed)
   833                           ; jumptable            260     6 (fixed)
   834                           ;	Chosen strategy is simple_byte
   835  0074  0873               	movf	??_initADC+1,w
   836  0075  3A00               	xorlw	0	; case 0
   837  0076  1903               	skipnz
   838  0077  2879               	goto	l723
   839  0078  28AB               	goto	l667
   840  0079                     l723:	
   841                           
   842                           ; Switch size 1, requested type "simple"
   843                           ; Number of cases is 16, Range of values is 0 to 15
   844                           ; switch strategies available:
   845                           ; Name         Instructions Cycles
   846                           ; simple_byte           49    25 (average)
   847                           ; direct_byte           56     8 (fixed)
   848                           ; jumptable            260     6 (fixed)
   849                           ;	Chosen strategy is simple_byte
   850  0079  0872               	movf	??_initADC,w
   851  007A  3A00               	xorlw	0	; case 0
   852  007B  1903               	skipnz
   853  007C  2821               	goto	l14
   854  007D  3A01               	xorlw	1	; case 1
   855  007E  1903               	skipnz
   856  007F  2826               	goto	l16
   857  0080  3A03               	xorlw	3	; case 2
   858  0081  1903               	skipnz
   859  0082  282B               	goto	l17
   860  0083  3A01               	xorlw	1	; case 3
   861  0084  1903               	skipnz
   862  0085  2830               	goto	l18
   863  0086  3A07               	xorlw	7	; case 4
   864  0087  1903               	skipnz
   865  0088  2835               	goto	l19
   866  0089  3A01               	xorlw	1	; case 5
   867  008A  1903               	skipnz
   868  008B  283A               	goto	l20
   869  008C  3A03               	xorlw	3	; case 6
   870  008D  1903               	skipnz
   871  008E  283F               	goto	l21
   872  008F  3A01               	xorlw	1	; case 7
   873  0090  1903               	skipnz
   874  0091  2844               	goto	l22
   875  0092  3A0F               	xorlw	15	; case 8
   876  0093  1903               	skipnz
   877  0094  2849               	goto	l23
   878  0095  3A01               	xorlw	1	; case 9
   879  0096  1903               	skipnz
   880  0097  284E               	goto	l24
   881  0098  3A03               	xorlw	3	; case 10
   882  0099  1903               	skipnz
   883  009A  2853               	goto	l25
   884  009B  3A01               	xorlw	1	; case 11
   885  009C  1903               	skipnz
   886  009D  2858               	goto	l26
   887  009E  3A07               	xorlw	7	; case 12
   888  009F  1903               	skipnz
   889  00A0  285D               	goto	l27
   890  00A1  3A01               	xorlw	1	; case 13
   891  00A2  1903               	skipnz
   892  00A3  2862               	goto	l28
   893  00A4  3A03               	xorlw	3	; case 14
   894  00A5  1903               	skipnz
   895  00A6  2867               	goto	l29
   896  00A7  3A01               	xorlw	1	; case 15
   897  00A8  1903               	skipnz
   898  00A9  286C               	goto	l30
   899  00AA  28AB               	goto	l667
   900  00AB                     l667:	
   901                           
   902                           ;ADC_Init.c: 130:     ADCON1 = 0;
   903  00AB  1683               	bsf	3,5	;RP0=1, select bank1
   904  00AC  1303               	bcf	3,6	;RP1=0, select bank1
   905  00AD  019F               	clrf	31	;volatile
   906  00AE                     l669:	
   907                           
   908                           ;ADC_Init.c: 132:     ADCON0bits.GO_DONE = 1;
   909  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   910  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   911  00B0  149F               	bsf	31,1	;volatile
   912  00B1                     l31:	
   913  00B1  0008               	return
   914  00B2                     __end_of_initADC:	
   915                           
   916                           	psect	text2
   917  00E3                     __ptext2:	
   918 ;; *************** function _ISR *****************
   919 ;; Defined at:
   920 ;;		line 32 in file "SPI.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		None
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   934 ;;      Params:         0       0       0       0       0
   935 ;;      Locals:         0       0       0       0       0
   936 ;;      Temps:          2       0       0       0       0
   937 ;;      Totals:         2       0       0       0       0
   938 ;;Total ram usage:        2 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		Interrupt level 1
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _ISR
   949  00E3                     _ISR:	
   950  00E3                     i1l675:	
   951                           
   952                           ;SPI.c: 33:     INTCONbits.GIE = 0;
   953  00E3  138B               	bcf	11,7	;volatile
   954                           
   955                           ;SPI.c: 34:     INTCONbits.PEIE = 0;
   956  00E4  130B               	bcf	11,6	;volatile
   957                           
   958                           ;SPI.c: 36:     if(ADCON0bits.GO_DONE == 0){
   959  00E5  1283               	bcf	3,5	;RP0=0, select bank0
   960  00E6  1303               	bcf	3,6	;RP1=0, select bank0
   961  00E7  189F               	btfsc	31,1	;volatile
   962  00E8  28EA               	goto	u1_21
   963  00E9  28EB               	goto	u1_20
   964  00EA                     u1_21:	
   965  00EA  28EE               	goto	i1l58
   966  00EB                     u1_20:	
   967  00EB                     i1l677:	
   968                           
   969                           ;SPI.c: 37:         ready = 1;
   970  00EB  01F5               	clrf	_ready
   971  00EC  0AF5               	incf	_ready,f
   972                           
   973                           ;SPI.c: 38:         PIR1bits.ADIF = 0;
   974  00ED  130C               	bcf	12,6	;volatile
   975  00EE                     i1l58:	
   976                           ;SPI.c: 39:     }
   977                           
   978                           
   979                           ;SPI.c: 41:     INTCONbits.GIE = 1;
   980  00EE  178B               	bsf	11,7	;volatile
   981                           
   982                           ;SPI.c: 42:     INTCONbits.PEIE = 1;
   983  00EF  170B               	bsf	11,6	;volatile
   984  00F0                     i1l59:	
   985  00F0  0871               	movf	??_ISR+1,w
   986  00F1  008A               	movwf	10
   987  00F2  0E70               	swapf	??_ISR^(0+4294967168),w
   988  00F3  0083               	movwf	3
   989  00F4  0EFE               	swapf	btemp,f
   990  00F5  0E7E               	swapf	btemp,w
   991  00F6  0009               	retfie
   992  00F7                     __end_of_ISR:	
   993  007E                     btemp	set	126	;btemp
   994  007E                     wtemp0	set	126
   995                           
   996                           	psect	intentry
   997  0004                     __pintentry:	
   998                           ;incstack = 0
   999                           ; Regs used in _ISR: []
  1000                           
  1001  0004                     interrupt_function:	
  1002  007E                     saved_w	set	btemp
  1003  0004  00FE               	movwf	btemp
  1004  0005  0E03               	swapf	3,w
  1005  0006  00F0               	movwf	??_ISR
  1006  0007  080A               	movf	10,w
  1007  0008  00F1               	movwf	??_ISR+1
  1008  0009  120A  118A  28E3   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_initADC

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                            _initADC
 ---------------------------------------------------------------------------------
 (1) _initADC                                              3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initADC

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 12 09:05:06 2020

             __CFG_CP$OFF 0000                        l20 003A                        l21 003F  
                      l30 006C                        l22 0044                        l14 0021  
                      l31 00B1                        l23 0049                        l24 004E  
                      l16 0026                        l25 0053                        l17 002B  
                      l26 0058                        l18 0030                        l27 005D  
                      l19 0035                        l28 0062                        l29 0067  
                      u20 00CA                        u21 00C9                        u30 00D9  
                      u31 00D8                       l701 00DE                       l723 0079  
                     l661 0015                       l665 0071                       l681 00B6  
                     l667 00AB                       l691 00CB                       l683 00B7  
                     l669 00AE                       l693 00CE                       l685 00BF  
                     l695 00D4                       l687 00C5                       l679 00B2  
                     l697 00D9                       l689 00CA                       l699 00DD  
            __CFG_CPD$OFF 0000                       _ISR 00E3              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      i1l58 00EE                      i1l59 00F0  
                    u1_20 00EB                      u1_21 00EA              __CFG_WRT$OFF 0000  
                    _main 00B2                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_ISR 0070                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l675 00E3  
                   i1l677 00EB                     _PORTA 0005                     _PORTB 0006  
                   _TRISA 0085                     _TRISB 0086            __CFG_FCMEN$OFF 0000  
         __end_of_initADC 00B2                     _ready 0075            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 00E3  
                  ??_main 0075                    _ADCON1 009F                    _ADRESH 001E  
          __CFG_PWRTE$OFF 0000                 ??_initADC 0072                    saved_w 007E  
 __end_of__initialization 0010            __pcstackCOMMON 0070                __pmaintext 00B2  
           initADC@analog 0074                __pintentry 0004                   __ptext1 0014  
                 __ptext2 00E3                   _initADC 0014              __size_of_ISR 0014  
    end_of_initialization 0010       start_initialization 000F               __end_of_ISR 00F7  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0075                 ___latbits 0002  
                ?_initADC 0070         interrupt_function 0004                  _PIE1bits 008C  
                _PIR1bits 000C                _ADCON0bits 001F          __size_of_initADC 009E  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0031                _INTCONbits 000B  
                intlevel1 0000  
