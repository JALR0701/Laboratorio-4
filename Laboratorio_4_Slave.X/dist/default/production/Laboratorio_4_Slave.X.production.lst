

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 16 11:54:26 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0013                     _SSPBUF	set	19
   365  0014                     _SSPCON	set	20
   366  001E                     _ADRESH	set	30
   367  0007                     _PORTC	set	7
   368  0006                     _PORTB	set	6
   369  0005                     _PORTA	set	5
   370  0005                     _PORTAbits	set	5
   371  000C                     _PIR1bits	set	12
   372  001F                     _ADCON0bits	set	31
   373  000B                     _INTCONbits	set	11
   374  0063                     _SSPIF	set	99
   375  0094                     _SSPSTATbits	set	148
   376  0094                     _SSPSTAT	set	148
   377  009F                     _ADCON1	set	159
   378  008C                     _PIE1bits	set	140
   379  0087                     _TRISC	set	135
   380  0086                     _TRISB	set	134
   381  0085                     _TRISA	set	133
   382  043B                     _TRISC3	set	1083
   383  043D                     _TRISC5	set	1085
   384  0188                     _ANSEL	set	392
   385                           
   386                           ; #config settings
   387  0000                     
   388                           	psect	cinit
   389  000F                     start_initialization:	
   390  000F                     __initialization:	
   391                           
   392                           ; Clear objects allocated to COMMON
   393  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   394  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   395  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   396  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   397  0013                     end_of_initialization:	
   398                           ;End of C runtime variable initialization code
   399                           
   400  0013                     __end_of__initialization:	
   401  0013  0183               	clrf	3
   402  0014  120A  118A  28B7   	ljmp	_main	;jump to C main() function
   403                           
   404                           	psect	bssCOMMON
   405  0076                     __pbssCOMMON:	
   406  0076                     _adc2:	
   407  0076                     	ds	1
   408  0077                     _adc1:	
   409  0077                     	ds	1
   410  0078                     _state:	
   411  0078                     	ds	1
   412  0079                     _ready:	
   413  0079                     	ds	1
   414                           
   415                           	psect	cstackCOMMON
   416  0070                     __pcstackCOMMON:	
   417  0070                     ?_spiRead:	
   418  0070                     ??_spiRead:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_spiWrite:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ??_spiWrite:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_initADC:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_ISR:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_main:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_spiReceiveWait:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ??_spiReceiveWait:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     spiWrite@dat:	
   443                           ; 1 bytes @ 0x0
   444                           
   445                           
   446                           ; 1 bytes @ 0x0
   447  0070                     	ds	1
   448  0071                     ??_ISR:	
   449                           
   450                           ; 1 bytes @ 0x1
   451  0071                     	ds	3
   452  0074                     ??_spiInit:	
   453  0074                     ??_initADC:	
   454                           ; 1 bytes @ 0x4
   455                           
   456  0074                     spiInit@sType:	
   457                           ; 1 bytes @ 0x4
   458                           
   459                           
   460                           ; 1 bytes @ 0x4
   461  0074                     	ds	2
   462                           
   463                           	psect	cstackBANK0
   464  0020                     __pcstackBANK0:	
   465  0020                     ?_spiInit:	
   466  0020                     initADC@analog:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0020                     spiInit@sDataSample:	
   470                           ; 1 bytes @ 0x0
   471                           
   472                           
   473                           ; 1 bytes @ 0x0
   474  0020                     	ds	1
   475  0021                     spiInit@sClockIdle:	
   476                           
   477                           ; 1 bytes @ 0x1
   478  0021                     	ds	1
   479  0022                     spiInit@sTransmitEdge:	
   480                           
   481                           ; 1 bytes @ 0x2
   482  0022                     	ds	1
   483  0023                     ??_main:	
   484                           
   485                           ; 1 bytes @ 0x3
   486  0023                     	ds	1
   487                           
   488                           	psect	maintext
   489  00B7                     __pmaintext:	
   490 ;;
   491 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   492 ;;
   493 ;; *************** function _main *****************
   494 ;; Defined at:
   495 ;;		line 58 in file "SPI.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : B00/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   509 ;;      Params:         0       0       0       0       0
   510 ;;      Locals:         0       0       0       0       0
   511 ;;      Temps:          0       1       0       0       0
   512 ;;      Totals:         0       1       0       0       0
   513 ;;Total ram usage:        1 bytes
   514 ;; Hardware stack levels required when called:    4
   515 ;; This function calls:
   516 ;;		_initADC
   517 ;;		_spiInit
   518 ;; This function is called by:
   519 ;;		Startup code after reset
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           
   524                           ;psect for function _main
   525  00B7                     _main:	
   526  00B7                     l944:	
   527                           ;incstack = 0
   528                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   529                           
   530                           
   531                           ;SPI.c: 60:     TRISA = 0B00100011;
   532  00B7  3023               	movlw	35
   533  00B8  1683               	bsf	3,5	;RP0=1, select bank1
   534  00B9  1303               	bcf	3,6	;RP1=0, select bank1
   535  00BA  0085               	movwf	5	;volatile
   536  00BB                     l946:	
   537                           
   538                           ;SPI.c: 61:     TRISB = 0;
   539  00BB  0186               	clrf	6	;volatile
   540  00BC                     l948:	
   541                           
   542                           ;SPI.c: 62:     TRISC = 0B00011000;
   543  00BC  3018               	movlw	24
   544  00BD  0087               	movwf	7	;volatile
   545  00BE                     l950:	
   546                           
   547                           ;SPI.c: 64:     ANSEL = 0b00000011;
   548  00BE  3003               	movlw	3
   549  00BF  1683               	bsf	3,5	;RP0=1, select bank3
   550  00C0  1703               	bsf	3,6	;RP1=1, select bank3
   551  00C1  0088               	movwf	8	;volatile
   552  00C2                     l952:	
   553                           
   554                           ;SPI.c: 66:     PORTA = 0;
   555  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   556  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   557  00C4  0185               	clrf	5	;volatile
   558  00C5                     l954:	
   559                           
   560                           ;SPI.c: 67:     PORTB = 0;
   561  00C5  0186               	clrf	6	;volatile
   562  00C6                     l956:	
   563                           
   564                           ;SPI.c: 68:     PORTC = 0;
   565  00C6  0187               	clrf	7	;volatile
   566  00C7                     l958:	
   567                           
   568                           ;SPI.c: 70:     INTCONbits.GIE = 1;
   569  00C7  178B               	bsf	11,7	;volatile
   570  00C8                     l960:	
   571                           
   572                           ;SPI.c: 71:     INTCONbits.PEIE = 1;
   573  00C8  170B               	bsf	11,6	;volatile
   574  00C9                     l962:	
   575                           
   576                           ;SPI.c: 73:     PIR1bits.SSPIF = 0;
   577  00C9  118C               	bcf	12,3	;volatile
   578  00CA                     l964:	
   579                           
   580                           ;SPI.c: 74:     PIE1bits.SSPIE = 1;
   581  00CA  1683               	bsf	3,5	;RP0=1, select bank1
   582  00CB  1303               	bcf	3,6	;RP1=0, select bank1
   583  00CC  158C               	bsf	12,3	;volatile
   584  00CD                     l966:	
   585                           
   586                           ;SPI.c: 76:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SPI
      +                          _IDLE_2_ACTIVE);
   587  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   588  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   589  00CF  01A0               	clrf	spiInit@sDataSample
   590  00D0  01A1               	clrf	spiInit@sClockIdle
   591  00D1  01A2               	clrf	spiInit@sTransmitEdge
   592  00D2  3024               	movlw	36
   593  00D3  120A  118A  2140  120A  118A  	fcall	_spiInit
   594  00D8                     l968:	
   595                           
   596                           ;SPI.c: 79:         initADC(0);
   597  00D8  3000               	movlw	0
   598  00D9  120A  118A  2017  120A  118A  	fcall	_initADC
   599  00DE                     l970:	
   600                           
   601                           ;SPI.c: 80:         if(ready){
   602  00DE  0879               	movf	_ready,w
   603  00DF  1903               	btfsc	3,2
   604  00E0  28E2               	goto	u131
   605  00E1  28E3               	goto	u130
   606  00E2                     u131:	
   607  00E2  28EB               	goto	l978
   608  00E3                     u130:	
   609  00E3                     l972:	
   610                           
   611                           ;SPI.c: 82:             adc1 = ADRESH;
   612  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   613  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   614  00E5  081E               	movf	30,w	;volatile
   615  00E6  00A3               	movwf	??_main
   616  00E7  0823               	movf	??_main,w
   617  00E8  00F7               	movwf	_adc1
   618  00E9                     l974:	
   619                           
   620                           ;SPI.c: 83:             ready = 0;
   621  00E9  01F9               	clrf	_ready
   622  00EA                     l976:	
   623                           
   624                           ;SPI.c: 84:             ADCON0bits.GO_DONE = 1;
   625  00EA  149F               	bsf	31,1	;volatile
   626  00EB                     l978:	
   627                           
   628                           ;SPI.c: 86:         initADC(1);
   629  00EB  3001               	movlw	1
   630  00EC  120A  118A  2017  120A  118A  	fcall	_initADC
   631  00F1                     l980:	
   632                           
   633                           ;SPI.c: 87:         if(ready){
   634  00F1  0879               	movf	_ready,w
   635  00F2  1903               	btfsc	3,2
   636  00F3  28F5               	goto	u141
   637  00F4  28F6               	goto	u140
   638  00F5                     u141:	
   639  00F5  28D8               	goto	l968
   640  00F6                     u140:	
   641  00F6                     l982:	
   642                           
   643                           ;SPI.c: 88:             PORTB = ADRESH;
   644  00F6  1283               	bcf	3,5	;RP0=0, select bank0
   645  00F7  1303               	bcf	3,6	;RP1=0, select bank0
   646  00F8  081E               	movf	30,w	;volatile
   647  00F9  0086               	movwf	6	;volatile
   648                           
   649                           ;SPI.c: 89:             adc2 = ADRESH;
   650  00FA  081E               	movf	30,w	;volatile
   651  00FB  00A3               	movwf	??_main
   652  00FC  0823               	movf	??_main,w
   653  00FD  00F6               	movwf	_adc2
   654  00FE                     l984:	
   655                           
   656                           ;SPI.c: 90:             ready = 0;
   657  00FE  01F9               	clrf	_ready
   658  00FF                     l986:	
   659                           
   660                           ;SPI.c: 91:             ADCON0bits.GO_DONE = 1;
   661  00FF  149F               	bsf	31,1	;volatile
   662  0100  28D8               	goto	l968
   663  0101  120A  118A  280C   	ljmp	start
   664  0104                     __end_of_main:	
   665                           
   666                           	psect	text1
   667  0140                     __ptext1:	
   668 ;; *************** function _spiInit *****************
   669 ;; Defined at:
   670 ;;		line 5 in file "SPI_Init.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;  sType           1    wreg     enum E1292
   673 ;;  sDataSample     1    0[BANK0 ] enum E1300
   674 ;;  sClockIdle      1    1[BANK0 ] enum E1304
   675 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  sType           1    4[COMMON] enum E1292
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       3       0       0       0
   688 ;;      Locals:         1       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0
   690 ;;      Totals:         1       3       0       0       0
   691 ;;Total ram usage:        4 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    3
   694 ;; This function calls:
   695 ;;		Nothing
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           
   702                           ;psect for function _spiInit
   703  0140                     _spiInit:	
   704                           
   705                           ;incstack = 0
   706                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   707                           ;spiInit@sType stored from wreg
   708  0140  00F4               	movwf	spiInit@sType
   709  0141                     l920:	
   710                           
   711                           ;SPI_Init.c: 5: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle
      +                           sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_Init.c: 6: {;SPI_Init.c: 7:     TRISC5
      +                           = 0;
   712  0141  1683               	bsf	3,5	;RP0=1, select bank1
   713  0142  1303               	bcf	3,6	;RP1=0, select bank1
   714  0143  1287               	bcf	7,5	;volatile
   715                           
   716                           ;SPI_Init.c: 8:     if(sType & 0b00000100)
   717  0144  1D74               	btfss	spiInit@sType,2
   718  0145  2947               	goto	u121
   719  0146  2948               	goto	u120
   720  0147                     u121:	
   721  0147  2950               	goto	l926
   722  0148                     u120:	
   723  0148                     l922:	
   724                           
   725                           ;SPI_Init.c: 9:     {;SPI_Init.c: 10:         SSPSTAT = sTransmitEdge;
   726  0148  1283               	bcf	3,5	;RP0=0, select bank0
   727  0149  1303               	bcf	3,6	;RP1=0, select bank0
   728  014A  0822               	movf	spiInit@sTransmitEdge,w
   729  014B  1683               	bsf	3,5	;RP0=1, select bank1
   730  014C  1303               	bcf	3,6	;RP1=0, select bank1
   731  014D  0094               	movwf	20	;volatile
   732  014E                     l924:	
   733                           
   734                           ;SPI_Init.c: 11:         TRISC3 = 1;
   735  014E  1587               	bsf	7,3	;volatile
   736                           
   737                           ;SPI_Init.c: 12:     }
   738  014F  2958               	goto	l110
   739  0150                     l926:	
   740                           
   741                           ;SPI_Init.c: 14:     {;SPI_Init.c: 15:         SSPSTAT = sDataSample | sTransmitEdge;
   742  0150  1283               	bcf	3,5	;RP0=0, select bank0
   743  0151  1303               	bcf	3,6	;RP1=0, select bank0
   744  0152  0820               	movf	spiInit@sDataSample,w
   745  0153  0422               	iorwf	spiInit@sTransmitEdge,w
   746  0154  1683               	bsf	3,5	;RP0=1, select bank1
   747  0155  1303               	bcf	3,6	;RP1=0, select bank1
   748  0156  0094               	movwf	20	;volatile
   749  0157                     l928:	
   750                           
   751                           ;SPI_Init.c: 16:         TRISC3 = 0;
   752  0157  1187               	bcf	7,3	;volatile
   753  0158                     l110:	
   754                           ;SPI_Init.c: 17:     }
   755                           
   756                           
   757                           ;SPI_Init.c: 19:     SSPCON = sType | sClockIdle;
   758  0158  0874               	movf	spiInit@sType,w
   759  0159  1283               	bcf	3,5	;RP0=0, select bank0
   760  015A  1303               	bcf	3,6	;RP1=0, select bank0
   761  015B  0421               	iorwf	spiInit@sClockIdle,w
   762  015C  0094               	movwf	20	;volatile
   763  015D                     l111:	
   764  015D  0008               	return
   765  015E                     __end_of_spiInit:	
   766                           
   767                           	psect	text2
   768  0017                     __ptext2:	
   769 ;; *************** function _initADC *****************
   770 ;; Defined at:
   771 ;;		line 5 in file "ADC_Init.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;  analog          1    wreg     unsigned char 
   774 ;; Auto vars:     Size  Location     Type
   775 ;;  analog          1    0[BANK0 ] unsigned char 
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         0       1       0       0       0
   787 ;;      Temps:          2       0       0       0       0
   788 ;;      Totals:         2       1       0       0       0
   789 ;;Total ram usage:        3 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    3
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           
   800                           ;psect for function _initADC
   801  0017                     _initADC:	
   802                           
   803                           ;incstack = 0
   804                           ; Regs used in _initADC: [wreg-fsr0h+status,2+status,0]
   805                           ;initADC@analog stored from wreg
   806  0017  1283               	bcf	3,5	;RP0=0, select bank0
   807  0018  1303               	bcf	3,6	;RP1=0, select bank0
   808  0019  00A0               	movwf	initADC@analog
   809  001A                     l930:	
   810                           
   811                           ;ADC_Init.c: 6:     INTCONbits.GIE = 1;
   812  001A  178B               	bsf	11,7	;volatile
   813                           
   814                           ;ADC_Init.c: 7:     INTCONbits.PEIE = 1;
   815  001B  170B               	bsf	11,6	;volatile
   816                           
   817                           ;ADC_Init.c: 9:     PIE1bits.ADIE = 1;
   818  001C  1683               	bsf	3,5	;RP0=1, select bank1
   819  001D  1303               	bcf	3,6	;RP1=0, select bank1
   820  001E  170C               	bsf	12,6	;volatile
   821                           
   822                           ;ADC_Init.c: 11:     PIR1bits.ADIF = 0;
   823  001F  1283               	bcf	3,5	;RP0=0, select bank0
   824  0020  1303               	bcf	3,6	;RP1=0, select bank0
   825  0021  130C               	bcf	12,6	;volatile
   826                           
   827                           ;ADC_Init.c: 13:     ADCON0bits.ADCS1 = 0;
   828  0022  139F               	bcf	31,7	;volatile
   829                           
   830                           ;ADC_Init.c: 14:     ADCON0bits.ADCS0 = 1;
   831  0023  171F               	bsf	31,6	;volatile
   832                           
   833                           ;ADC_Init.c: 15:     ADCON0bits.ADON = 1;
   834  0024  141F               	bsf	31,0	;volatile
   835                           
   836                           ;ADC_Init.c: 17:     switch(analog){
   837  0025  2876               	goto	l934
   838  0026                     l77:	
   839                           ;ADC_Init.c: 18:         case 0:
   840                           
   841                           
   842                           ;ADC_Init.c: 19:             ADCON0bits.CHS3 = 0;
   843  0026  129F               	bcf	31,5	;volatile
   844                           
   845                           ;ADC_Init.c: 20:             ADCON0bits.CHS2 = 0;
   846  0027  121F               	bcf	31,4	;volatile
   847                           
   848                           ;ADC_Init.c: 21:             ADCON0bits.CHS1 = 0;
   849  0028  119F               	bcf	31,3	;volatile
   850                           
   851                           ;ADC_Init.c: 22:             ADCON0bits.CHS0 = 0;
   852  0029  111F               	bcf	31,2	;volatile
   853                           
   854                           ;ADC_Init.c: 23:             break;
   855  002A  28B0               	goto	l936
   856  002B                     l79:	
   857                           ;ADC_Init.c: 25:         case 1:
   858                           
   859                           
   860                           ;ADC_Init.c: 26:             ADCON0bits.CHS3 = 0;
   861  002B  129F               	bcf	31,5	;volatile
   862                           
   863                           ;ADC_Init.c: 27:             ADCON0bits.CHS2 = 0;
   864  002C  121F               	bcf	31,4	;volatile
   865                           
   866                           ;ADC_Init.c: 28:             ADCON0bits.CHS1 = 0;
   867  002D  119F               	bcf	31,3	;volatile
   868                           
   869                           ;ADC_Init.c: 29:             ADCON0bits.CHS0 = 1;
   870  002E  151F               	bsf	31,2	;volatile
   871                           
   872                           ;ADC_Init.c: 30:             break;
   873  002F  28B0               	goto	l936
   874  0030                     l80:	
   875                           ;ADC_Init.c: 32:         case 2:
   876                           
   877                           
   878                           ;ADC_Init.c: 33:             ADCON0bits.CHS3 = 0;
   879  0030  129F               	bcf	31,5	;volatile
   880                           
   881                           ;ADC_Init.c: 34:             ADCON0bits.CHS2 = 0;
   882  0031  121F               	bcf	31,4	;volatile
   883                           
   884                           ;ADC_Init.c: 35:             ADCON0bits.CHS1 = 1;
   885  0032  159F               	bsf	31,3	;volatile
   886                           
   887                           ;ADC_Init.c: 36:             ADCON0bits.CHS0 = 0;
   888  0033  111F               	bcf	31,2	;volatile
   889                           
   890                           ;ADC_Init.c: 37:             break;
   891  0034  28B0               	goto	l936
   892  0035                     l81:	
   893                           ;ADC_Init.c: 39:         case 3:
   894                           
   895                           
   896                           ;ADC_Init.c: 40:             ADCON0bits.CHS3 = 0;
   897  0035  129F               	bcf	31,5	;volatile
   898                           
   899                           ;ADC_Init.c: 41:             ADCON0bits.CHS2 = 0;
   900  0036  121F               	bcf	31,4	;volatile
   901                           
   902                           ;ADC_Init.c: 42:             ADCON0bits.CHS1 = 1;
   903  0037  159F               	bsf	31,3	;volatile
   904                           
   905                           ;ADC_Init.c: 43:             ADCON0bits.CHS0 = 1;
   906  0038  151F               	bsf	31,2	;volatile
   907                           
   908                           ;ADC_Init.c: 44:             break;
   909  0039  28B0               	goto	l936
   910  003A                     l82:	
   911                           ;ADC_Init.c: 46:         case 4:
   912                           
   913                           
   914                           ;ADC_Init.c: 47:             ADCON0bits.CHS3 = 0;
   915  003A  129F               	bcf	31,5	;volatile
   916                           
   917                           ;ADC_Init.c: 48:             ADCON0bits.CHS2 = 1;
   918  003B  161F               	bsf	31,4	;volatile
   919                           
   920                           ;ADC_Init.c: 49:             ADCON0bits.CHS1 = 0;
   921  003C  119F               	bcf	31,3	;volatile
   922                           
   923                           ;ADC_Init.c: 50:             ADCON0bits.CHS0 = 0;
   924  003D  111F               	bcf	31,2	;volatile
   925                           
   926                           ;ADC_Init.c: 51:             break;
   927  003E  28B0               	goto	l936
   928  003F                     l83:	
   929                           ;ADC_Init.c: 53:         case 5:
   930                           
   931                           
   932                           ;ADC_Init.c: 54:             ADCON0bits.CHS3 = 0;
   933  003F  129F               	bcf	31,5	;volatile
   934                           
   935                           ;ADC_Init.c: 55:             ADCON0bits.CHS2 = 1;
   936  0040  161F               	bsf	31,4	;volatile
   937                           
   938                           ;ADC_Init.c: 56:             ADCON0bits.CHS1 = 0;
   939  0041  119F               	bcf	31,3	;volatile
   940                           
   941                           ;ADC_Init.c: 57:             ADCON0bits.CHS0 = 1;
   942  0042  151F               	bsf	31,2	;volatile
   943                           
   944                           ;ADC_Init.c: 58:             break;
   945  0043  28B0               	goto	l936
   946  0044                     l84:	
   947                           ;ADC_Init.c: 60:         case 6:
   948                           
   949                           
   950                           ;ADC_Init.c: 61:             ADCON0bits.CHS3 = 0;
   951  0044  129F               	bcf	31,5	;volatile
   952                           
   953                           ;ADC_Init.c: 62:             ADCON0bits.CHS2 = 1;
   954  0045  161F               	bsf	31,4	;volatile
   955                           
   956                           ;ADC_Init.c: 63:             ADCON0bits.CHS1 = 1;
   957  0046  159F               	bsf	31,3	;volatile
   958                           
   959                           ;ADC_Init.c: 64:             ADCON0bits.CHS0 = 0;
   960  0047  111F               	bcf	31,2	;volatile
   961                           
   962                           ;ADC_Init.c: 65:             break;
   963  0048  28B0               	goto	l936
   964  0049                     l85:	
   965                           ;ADC_Init.c: 67:         case 7:
   966                           
   967                           
   968                           ;ADC_Init.c: 68:             ADCON0bits.CHS3 = 0;
   969  0049  129F               	bcf	31,5	;volatile
   970                           
   971                           ;ADC_Init.c: 69:             ADCON0bits.CHS2 = 1;
   972  004A  161F               	bsf	31,4	;volatile
   973                           
   974                           ;ADC_Init.c: 70:             ADCON0bits.CHS1 = 1;
   975  004B  159F               	bsf	31,3	;volatile
   976                           
   977                           ;ADC_Init.c: 71:             ADCON0bits.CHS0 = 1;
   978  004C  151F               	bsf	31,2	;volatile
   979                           
   980                           ;ADC_Init.c: 72:             break;
   981  004D  28B0               	goto	l936
   982  004E                     l86:	
   983                           ;ADC_Init.c: 74:         case 8:
   984                           
   985                           
   986                           ;ADC_Init.c: 75:             ADCON0bits.CHS3 = 1;
   987  004E  169F               	bsf	31,5	;volatile
   988                           
   989                           ;ADC_Init.c: 76:             ADCON0bits.CHS2 = 0;
   990  004F  121F               	bcf	31,4	;volatile
   991                           
   992                           ;ADC_Init.c: 77:             ADCON0bits.CHS1 = 0;
   993  0050  119F               	bcf	31,3	;volatile
   994                           
   995                           ;ADC_Init.c: 78:             ADCON0bits.CHS0 = 0;
   996  0051  111F               	bcf	31,2	;volatile
   997                           
   998                           ;ADC_Init.c: 79:             break;
   999  0052  28B0               	goto	l936
  1000  0053                     l87:	
  1001                           ;ADC_Init.c: 81:         case 9:
  1002                           
  1003                           
  1004                           ;ADC_Init.c: 82:             ADCON0bits.CHS3 = 1;
  1005  0053  169F               	bsf	31,5	;volatile
  1006                           
  1007                           ;ADC_Init.c: 83:             ADCON0bits.CHS2 = 0;
  1008  0054  121F               	bcf	31,4	;volatile
  1009                           
  1010                           ;ADC_Init.c: 84:             ADCON0bits.CHS1 = 0;
  1011  0055  119F               	bcf	31,3	;volatile
  1012                           
  1013                           ;ADC_Init.c: 85:             ADCON0bits.CHS0 = 1;
  1014  0056  151F               	bsf	31,2	;volatile
  1015                           
  1016                           ;ADC_Init.c: 86:             break;
  1017  0057  28B0               	goto	l936
  1018  0058                     l88:	
  1019                           ;ADC_Init.c: 88:         case 10:
  1020                           
  1021                           
  1022                           ;ADC_Init.c: 89:             ADCON0bits.CHS3 = 1;
  1023  0058  169F               	bsf	31,5	;volatile
  1024                           
  1025                           ;ADC_Init.c: 90:             ADCON0bits.CHS2 = 0;
  1026  0059  121F               	bcf	31,4	;volatile
  1027                           
  1028                           ;ADC_Init.c: 91:             ADCON0bits.CHS1 = 1;
  1029  005A  159F               	bsf	31,3	;volatile
  1030                           
  1031                           ;ADC_Init.c: 92:             ADCON0bits.CHS0 = 0;
  1032  005B  111F               	bcf	31,2	;volatile
  1033                           
  1034                           ;ADC_Init.c: 93:             break;
  1035  005C  28B0               	goto	l936
  1036  005D                     l89:	
  1037                           ;ADC_Init.c: 95:         case 11:
  1038                           
  1039                           
  1040                           ;ADC_Init.c: 96:             ADCON0bits.CHS3 = 1;
  1041  005D  169F               	bsf	31,5	;volatile
  1042                           
  1043                           ;ADC_Init.c: 97:             ADCON0bits.CHS2 = 0;
  1044  005E  121F               	bcf	31,4	;volatile
  1045                           
  1046                           ;ADC_Init.c: 98:             ADCON0bits.CHS1 = 1;
  1047  005F  159F               	bsf	31,3	;volatile
  1048                           
  1049                           ;ADC_Init.c: 99:             ADCON0bits.CHS0 = 1;
  1050  0060  151F               	bsf	31,2	;volatile
  1051                           
  1052                           ;ADC_Init.c: 100:             break;
  1053  0061  28B0               	goto	l936
  1054  0062                     l90:	
  1055                           ;ADC_Init.c: 102:         case 12:
  1056                           
  1057                           
  1058                           ;ADC_Init.c: 103:             ADCON0bits.CHS3 = 1;
  1059  0062  169F               	bsf	31,5	;volatile
  1060                           
  1061                           ;ADC_Init.c: 104:             ADCON0bits.CHS2 = 1;
  1062  0063  161F               	bsf	31,4	;volatile
  1063                           
  1064                           ;ADC_Init.c: 105:             ADCON0bits.CHS1 = 0;
  1065  0064  119F               	bcf	31,3	;volatile
  1066                           
  1067                           ;ADC_Init.c: 106:             ADCON0bits.CHS0 = 0;
  1068  0065  111F               	bcf	31,2	;volatile
  1069                           
  1070                           ;ADC_Init.c: 107:             break;
  1071  0066  28B0               	goto	l936
  1072  0067                     l91:	
  1073                           ;ADC_Init.c: 109:         case 13:
  1074                           
  1075                           
  1076                           ;ADC_Init.c: 110:             ADCON0bits.CHS3 = 1;
  1077  0067  169F               	bsf	31,5	;volatile
  1078                           
  1079                           ;ADC_Init.c: 111:             ADCON0bits.CHS2 = 1;
  1080  0068  161F               	bsf	31,4	;volatile
  1081                           
  1082                           ;ADC_Init.c: 112:             ADCON0bits.CHS1 = 0;
  1083  0069  119F               	bcf	31,3	;volatile
  1084                           
  1085                           ;ADC_Init.c: 113:             ADCON0bits.CHS0 = 1;
  1086  006A  151F               	bsf	31,2	;volatile
  1087                           
  1088                           ;ADC_Init.c: 114:             break;
  1089  006B  28B0               	goto	l936
  1090  006C                     l92:	
  1091                           ;ADC_Init.c: 116:         case 14:
  1092                           
  1093                           
  1094                           ;ADC_Init.c: 117:             ADCON0bits.CHS3 = 1;
  1095  006C  169F               	bsf	31,5	;volatile
  1096                           
  1097                           ;ADC_Init.c: 118:             ADCON0bits.CHS2 = 1;
  1098  006D  161F               	bsf	31,4	;volatile
  1099                           
  1100                           ;ADC_Init.c: 119:             ADCON0bits.CHS1 = 1;
  1101  006E  159F               	bsf	31,3	;volatile
  1102                           
  1103                           ;ADC_Init.c: 120:             ADCON0bits.CHS0 = 0;
  1104  006F  111F               	bcf	31,2	;volatile
  1105                           
  1106                           ;ADC_Init.c: 121:             break;
  1107  0070  28B0               	goto	l936
  1108  0071                     l93:	
  1109                           ;ADC_Init.c: 123:         case 15:
  1110                           
  1111                           
  1112                           ;ADC_Init.c: 124:             ADCON0bits.CHS3 = 1;
  1113  0071  169F               	bsf	31,5	;volatile
  1114                           
  1115                           ;ADC_Init.c: 125:             ADCON0bits.CHS2 = 1;
  1116  0072  161F               	bsf	31,4	;volatile
  1117                           
  1118                           ;ADC_Init.c: 126:             ADCON0bits.CHS1 = 1;
  1119  0073  159F               	bsf	31,3	;volatile
  1120                           
  1121                           ;ADC_Init.c: 127:             ADCON0bits.CHS0 = 1;
  1122  0074  151F               	bsf	31,2	;volatile
  1123                           
  1124                           ;ADC_Init.c: 128:             break;
  1125  0075  28B0               	goto	l936
  1126  0076                     l934:	
  1127  0076  0820               	movf	initADC@analog,w
  1128  0077  00F4               	movwf	??_initADC
  1129  0078  01F5               	clrf	??_initADC+1
  1130                           
  1131                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1132                           ; Switch size 1, requested type "simple"
  1133                           ; Number of cases is 1, Range of values is 0 to 0
  1134                           ; switch strategies available:
  1135                           ; Name         Instructions Cycles
  1136                           ; simple_byte            4     3 (average)
  1137                           ; direct_byte           11     8 (fixed)
  1138                           ; jumptable            260     6 (fixed)
  1139                           ;	Chosen strategy is simple_byte
  1140  0079  0875               	movf	??_initADC+1,w
  1141  007A  3A00               	xorlw	0	; case 0
  1142  007B  1903               	skipnz
  1143  007C  287E               	goto	l1008
  1144  007D  28B0               	goto	l936
  1145  007E                     l1008:	
  1146                           
  1147                           ; Switch size 1, requested type "simple"
  1148                           ; Number of cases is 16, Range of values is 0 to 15
  1149                           ; switch strategies available:
  1150                           ; Name         Instructions Cycles
  1151                           ; simple_byte           49    25 (average)
  1152                           ; direct_byte           56     8 (fixed)
  1153                           ; jumptable            260     6 (fixed)
  1154                           ;	Chosen strategy is simple_byte
  1155  007E  0874               	movf	??_initADC,w
  1156  007F  3A00               	xorlw	0	; case 0
  1157  0080  1903               	skipnz
  1158  0081  2826               	goto	l77
  1159  0082  3A01               	xorlw	1	; case 1
  1160  0083  1903               	skipnz
  1161  0084  282B               	goto	l79
  1162  0085  3A03               	xorlw	3	; case 2
  1163  0086  1903               	skipnz
  1164  0087  2830               	goto	l80
  1165  0088  3A01               	xorlw	1	; case 3
  1166  0089  1903               	skipnz
  1167  008A  2835               	goto	l81
  1168  008B  3A07               	xorlw	7	; case 4
  1169  008C  1903               	skipnz
  1170  008D  283A               	goto	l82
  1171  008E  3A01               	xorlw	1	; case 5
  1172  008F  1903               	skipnz
  1173  0090  283F               	goto	l83
  1174  0091  3A03               	xorlw	3	; case 6
  1175  0092  1903               	skipnz
  1176  0093  2844               	goto	l84
  1177  0094  3A01               	xorlw	1	; case 7
  1178  0095  1903               	skipnz
  1179  0096  2849               	goto	l85
  1180  0097  3A0F               	xorlw	15	; case 8
  1181  0098  1903               	skipnz
  1182  0099  284E               	goto	l86
  1183  009A  3A01               	xorlw	1	; case 9
  1184  009B  1903               	skipnz
  1185  009C  2853               	goto	l87
  1186  009D  3A03               	xorlw	3	; case 10
  1187  009E  1903               	skipnz
  1188  009F  2858               	goto	l88
  1189  00A0  3A01               	xorlw	1	; case 11
  1190  00A1  1903               	skipnz
  1191  00A2  285D               	goto	l89
  1192  00A3  3A07               	xorlw	7	; case 12
  1193  00A4  1903               	skipnz
  1194  00A5  2862               	goto	l90
  1195  00A6  3A01               	xorlw	1	; case 13
  1196  00A7  1903               	skipnz
  1197  00A8  2867               	goto	l91
  1198  00A9  3A03               	xorlw	3	; case 14
  1199  00AA  1903               	skipnz
  1200  00AB  286C               	goto	l92
  1201  00AC  3A01               	xorlw	1	; case 15
  1202  00AD  1903               	skipnz
  1203  00AE  2871               	goto	l93
  1204  00AF  28B0               	goto	l936
  1205  00B0                     l936:	
  1206                           
  1207                           ;ADC_Init.c: 130:     ADCON1 = 0;
  1208  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  1209  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  1210  00B2  019F               	clrf	31	;volatile
  1211  00B3                     l938:	
  1212                           
  1213                           ;ADC_Init.c: 132:     ADCON0bits.GO_DONE = 1;
  1214  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1215  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1216  00B5  149F               	bsf	31,1	;volatile
  1217  00B6                     l94:	
  1218  00B6  0008               	return
  1219  00B7                     __end_of_initADC:	
  1220                           
  1221                           	psect	text3
  1222  0104                     __ptext3:	
  1223 ;; *************** function _ISR *****************
  1224 ;; Defined at:
  1225 ;;		line 33 in file "SPI.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0, pclath, cstack
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1239 ;;      Params:         0       0       0       0       0
  1240 ;;      Locals:         0       0       0       0       0
  1241 ;;      Temps:          3       0       0       0       0
  1242 ;;      Totals:         3       0       0       0       0
  1243 ;;Total ram usage:        3 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; Hardware stack levels required when called:    2
  1246 ;; This function calls:
  1247 ;;		_spiRead
  1248 ;;		_spiWrite
  1249 ;; This function is called by:
  1250 ;;		Interrupt level 1
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           
  1255                           ;psect for function _ISR
  1256  0104                     _ISR:	
  1257  0104                     i1l754:	
  1258                           
  1259                           ;SPI.c: 34:     INTCONbits.GIE = 0;
  1260  0104  138B               	bcf	11,7	;volatile
  1261                           
  1262                           ;SPI.c: 35:     INTCONbits.PEIE = 0;
  1263  0105  130B               	bcf	11,6	;volatile
  1264                           
  1265                           ;SPI.c: 37:     if(ADCON0bits.GO_DONE == 0){
  1266  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0108  189F               	btfsc	31,1	;volatile
  1269  0109  290B               	goto	u3_21
  1270  010A  290C               	goto	u3_20
  1271  010B                     u3_21:	
  1272  010B  290F               	goto	i1l49
  1273  010C                     u3_20:	
  1274  010C                     i1l756:	
  1275                           
  1276                           ;SPI.c: 38:         ready = 1;
  1277  010C  01F9               	clrf	_ready
  1278  010D  0AF9               	incf	_ready,f
  1279                           
  1280                           ;SPI.c: 39:         PIR1bits.ADIF = 0;
  1281  010E  130C               	bcf	12,6	;volatile
  1282  010F                     i1l49:	
  1283                           ;SPI.c: 40:     }
  1284                           
  1285                           
  1286                           ;SPI.c: 42:     if(SSPIF == 1){
  1287  010F  1D8C               	btfss	12,3	;volatile
  1288  0110  2912               	goto	u4_21
  1289  0111  2913               	goto	u4_20
  1290  0112                     u4_21:	
  1291  0112  2937               	goto	i1l772
  1292  0113                     u4_20:	
  1293  0113                     i1l758:	
  1294                           
  1295                           ;SPI.c: 43:         state = spiRead();
  1296  0113  120A  118A  215E  120A  118A  	fcall	_spiRead
  1297  0118  00F1               	movwf	??_ISR
  1298  0119  0871               	movf	??_ISR,w
  1299  011A  00F8               	movwf	_state
  1300  011B                     i1l760:	
  1301                           
  1302                           ;SPI.c: 44:         if (state == 0){
  1303  011B  0878               	movf	_state,w
  1304  011C  1D03               	btfss	3,2
  1305  011D  291F               	goto	u5_21
  1306  011E  2920               	goto	u5_20
  1307  011F                     u5_21:	
  1308  011F  2926               	goto	i1l764
  1309  0120                     u5_20:	
  1310  0120                     i1l762:	
  1311                           
  1312                           ;SPI.c: 45:             spiWrite(adc1);
  1313  0120  0877               	movf	_adc1,w
  1314  0121  120A  118A  216E  120A  118A  	fcall	_spiWrite
  1315  0126                     i1l764:	
  1316                           
  1317                           ;SPI.c: 47:         if (state == 1){
  1318  0126  0378               	decf	_state,w
  1319  0127  1D03               	btfss	3,2
  1320  0128  292A               	goto	u6_21
  1321  0129  292B               	goto	u6_20
  1322  012A                     u6_21:	
  1323  012A  2934               	goto	i1l770
  1324  012B                     u6_20:	
  1325  012B                     i1l766:	
  1326                           
  1327                           ;SPI.c: 48:             PORTAbits.RA2 = 1;
  1328  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1329  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1330  012D  1505               	bsf	5,2	;volatile
  1331  012E                     i1l768:	
  1332                           
  1333                           ;SPI.c: 49:             spiWrite(adc2);
  1334  012E  0876               	movf	_adc2,w
  1335  012F  120A  118A  216E  120A  118A  	fcall	_spiWrite
  1336  0134                     i1l770:	
  1337                           
  1338                           ;SPI.c: 51:         SSPIF = 0;
  1339  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1340  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1341  0136  118C               	bcf	12,3	;volatile
  1342  0137                     i1l772:	
  1343                           
  1344                           ;SPI.c: 54:     INTCONbits.GIE = 1;
  1345  0137  178B               	bsf	11,7	;volatile
  1346  0138                     i1l774:	
  1347                           
  1348                           ;SPI.c: 55:     INTCONbits.PEIE = 1;
  1349  0138  170B               	bsf	11,6	;volatile
  1350  0139                     i1l53:	
  1351  0139  0873               	movf	??_ISR+2,w
  1352  013A  008A               	movwf	10
  1353  013B  0E72               	swapf	(??_ISR+1)^(0+4294967168),w
  1354  013C  0083               	movwf	3
  1355  013D  0EFE               	swapf	btemp,f
  1356  013E  0E7E               	swapf	btemp,w
  1357  013F  0009               	retfie
  1358  0140                     __end_of_ISR:	
  1359                           
  1360                           	psect	intentry
  1361  0004                     __pintentry:	
  1362                           ;incstack = 0
  1363                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1364                           
  1365  0004                     interrupt_function:	
  1366  007E                     saved_w	set	btemp
  1367  0004  00FE               	movwf	btemp
  1368  0005  0E03               	swapf	3,w
  1369  0006  00F2               	movwf	??_ISR+1
  1370  0007  080A               	movf	10,w
  1371  0008  00F3               	movwf	??_ISR+2
  1372  0009  120A  118A  2904   	ljmp	_ISR
  1373                           
  1374                           	psect	text4
  1375  016E                     __ptext4:	
  1376 ;; *************** function _spiWrite *****************
  1377 ;; Defined at:
  1378 ;;		line 27 in file "SPI_Init.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;  dat             1    wreg     unsigned char 
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  dat             1    0[COMMON] unsigned char 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      void 
  1385 ;; Registers used:
  1386 ;;		wreg
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1392 ;;      Params:         0       0       0       0       0
  1393 ;;      Locals:         1       0       0       0       0
  1394 ;;      Temps:          0       0       0       0       0
  1395 ;;      Totals:         1       0       0       0       0
  1396 ;;Total ram usage:        1 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_ISR
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           
  1406                           ;psect for function _spiWrite
  1407  016E                     _spiWrite:	
  1408                           
  1409                           ;incstack = 0
  1410                           ; Regs used in _spiWrite: [wreg]
  1411                           ;spiWrite@dat stored from wreg
  1412  016E  00F0               	movwf	spiWrite@dat
  1413  016F                     i1l728:	
  1414                           
  1415                           ;SPI_Init.c: 27: void spiWrite(char dat);SPI_Init.c: 28: {;SPI_Init.c: 29:     SSPBUF = 
      +                          dat;
  1416  016F  0870               	movf	spiWrite@dat,w
  1417  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0172  0093               	movwf	19	;volatile
  1420  0173                     i1l120:	
  1421  0173  0008               	return
  1422  0174                     __end_of_spiWrite:	
  1423                           
  1424                           	psect	text5
  1425  015E                     __ptext5:	
  1426 ;; *************** function _spiRead *****************
  1427 ;; Defined at:
  1428 ;;		line 40 in file "SPI_Init.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      unsigned char 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0, pclath, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1442 ;;      Params:         0       0       0       0       0
  1443 ;;      Locals:         0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0
  1445 ;;      Totals:         0       0       0       0       0
  1446 ;;Total ram usage:        0 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    1
  1449 ;; This function calls:
  1450 ;;		_spiReceiveWait
  1451 ;; This function is called by:
  1452 ;;		_ISR
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           
  1457                           ;psect for function _spiRead
  1458  015E                     _spiRead:	
  1459  015E                     i1l722:	
  1460                           ;incstack = 0
  1461                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1462                           
  1463                           
  1464                           ;SPI_Init.c: 42:     spiReceiveWait();
  1465  015E  120A  118A  2167  120A  118A  	fcall	_spiReceiveWait
  1466  0163                     i1l724:	
  1467                           
  1468                           ;SPI_Init.c: 43:     return(SSPBUF);
  1469  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1470  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1471  0165  0813               	movf	19,w	;volatile
  1472  0166                     i1l128:	
  1473  0166  0008               	return
  1474  0167                     __end_of_spiRead:	
  1475                           
  1476                           	psect	text6
  1477  0167                     __ptext6:	
  1478 ;; *************** function _spiReceiveWait *****************
  1479 ;; Defined at:
  1480 ;;		line 22 in file "SPI_Init.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;		None
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;		None
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  1    wreg      void 
  1487 ;; Registers used:
  1488 ;;		None
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1494 ;;      Params:         0       0       0       0       0
  1495 ;;      Locals:         0       0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0
  1497 ;;      Totals:         0       0       0       0       0
  1498 ;;Total ram usage:        0 bytes
  1499 ;; Hardware stack levels used:    1
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		_spiRead
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           
  1508                           ;psect for function _spiReceiveWait
  1509  0167                     _spiReceiveWait:	
  1510  0167                     i1l720:	
  1511                           ;incstack = 0
  1512                           ; Regs used in _spiReceiveWait: []
  1513                           
  1514  0167                     i1l114:	
  1515                           ;SPI_Init.c: 24:     while ( !SSPSTATbits.BF );
  1516                           
  1517  0167  1683               	bsf	3,5	;RP0=1, select bank1
  1518  0168  1303               	bcf	3,6	;RP1=0, select bank1
  1519  0169  1C14               	btfss	20,0	;volatile
  1520  016A  296C               	goto	u1_21
  1521  016B  296D               	goto	u1_20
  1522  016C                     u1_21:	
  1523  016C  2967               	goto	i1l114
  1524  016D                     u1_20:	
  1525  016D                     i1l117:	
  1526  016D  0008               	return
  1527  016E                     __end_of_spiReceiveWait:	
  1528  007E                     btemp	set	126	;btemp
  1529  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_initADC

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     478
                                              3 BANK0      1     1      0
                            _initADC
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _initADC                                              3     3      0      22
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initADC
   _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 16 11:54:26 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l80 0030  
                      l81 0035                        l90 0062                        l82 003A  
                      l91 0067                        l83 003F                        l92 006C  
                      l84 0044                        l93 0071                        l85 0049  
                      l77 0026                        l94 00B6                        l86 004E  
                      l87 0053                        l79 002B                        l88 0058  
                      l89 005D                       l110 0158                       l111 015D  
                     l920 0141                       l930 001A                       l922 0148  
                     l924 014E                       l934 0076                       l926 0150  
                     l950 00BE                       l936 00B0                       l928 0157  
                     l960 00C8                       l952 00C2                       l944 00B7  
                     l938 00B3                       l970 00DE                       l962 00C9  
                     l954 00C5                       l946 00BB                       l980 00F1  
                     l972 00E3                       l964 00CA                       l956 00C6  
                     l948 00BC                       l982 00F6                       l974 00E9  
                     l966 00CD                       l958 00C7                       l984 00FE  
                     l976 00EA                       l968 00D8                       l986 00FF  
                     l978 00EB                       u120 0148                       u121 0147  
                     u130 00E3                       u131 00E2                       u140 00F6  
                     u141 00F5              __CFG_CPD$OFF 0000                       _ISR 0104  
            __CFG_LVP$OFF 0000                      ?_ISR 0070                      l1008 007E  
                    i1l53 0139                      i1l49 010F                      u1_20 016D  
                    u1_21 016C                      u3_20 010C                      u3_21 010B  
                    u4_20 0113                      u4_21 0112                      u5_20 0120  
                    u5_21 011F                      u6_20 012B                      u6_21 012A  
            __CFG_WRT$OFF 0000                      _adc1 0077                      _adc2 0076  
                    _main 00B7                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_ISR 0071                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l120 0173  
                   i1l114 0167                     i1l117 016D                     i1l128 0166  
                   i1l720 0167                     i1l722 015E                     i1l724 0163  
                   i1l728 016F                     i1l760 011B                     i1l770 0134  
                   i1l762 0120                     i1l754 0104                     i1l764 0126  
                   i1l772 0137                     i1l756 010C                     i1l774 0138  
                   i1l766 012B                     i1l758 0113                     i1l768 012E  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _SSPIF 0063            __CFG_FCMEN$OFF 0000           __end_of_initADC 00B7  
                   _ready 0079                     _state 0078            __CFG_BOREN$OFF 0000  
                   pclath 000A           __end_of_spiInit 015E           __end_of_spiRead 0167  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 0104                    ??_main 0023  
                  _ADCON1 009F                    _ADRESH 001E                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000                 ??_initADC 0074                    saved_w 007E  
        __end_of_spiWrite 0174                 ??_spiInit 0074                 ??_spiRead 0070  
 __end_of__initialization 0013            __pcstackCOMMON 0070                __pmaintext 00B7  
           initADC@analog 0020                __pintentry 0004   __size_of_spiReceiveWait 0007  
                 _SSPSTAT 0094                 ?_spiWrite 0070                   __ptext1 0140  
                 __ptext2 0017                   __ptext3 0104                   __ptext4 016E  
                 __ptext5 015E                   __ptext6 0167                   _initADC 0017  
            __size_of_ISR 003C                   _spiInit 0140                   _spiRead 015E  
    end_of_initialization 0013                ??_spiWrite 0070                 _PORTAbits 0005  
             spiWrite@dat 0070            _spiReceiveWait 0167       start_initialization 000F  
             __end_of_ISR 0140  __CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 016E  
             __pbssCOMMON 0076                 ___latbits 0002             __pcstackBANK0 0020  
         ?_spiReceiveWait 0070         __size_of_spiWrite 0006                  ?_initADC 0070  
                ?_spiInit 0020                  ?_spiRead 0070      spiInit@sTransmitEdge 0022  
       interrupt_function 0004                  _PIE1bits 008C        spiInit@sDataSample 0020  
                _PIR1bits 000C                _ADCON0bits 001F          __size_of_initADC 00A0  
        __size_of_spiInit 001E          __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 004D                  _spiWrite 016E              spiInit@sType 0074  
       spiInit@sClockIdle 0021                _INTCONbits 000B                  intlevel1 0000  
        ??_spiReceiveWait 0070  
